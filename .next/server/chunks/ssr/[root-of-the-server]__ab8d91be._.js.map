{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/lib/wagmi.ts"],"sourcesContent":["'use client';\n\nimport { createConfig, http } from 'wagmi';\nimport { ronin, saigon } from 'wagmi/chains';\n\n// Create wagmi config\nexport const config = createConfig({\n  chains: [ronin, saigon],\n  transports: {\n    [ronin.id]: http(),\n    [saigon.id]: http(),\n  },\n});\n\nexport { ronin, saigon };\n"],"names":[],"mappings":";;;AAEA;AAAA;AACA;AAAA;AAHA;;;AAMO,MAAM,SAAS,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;IACjC,QAAQ;QAAC,8JAAA,CAAA,QAAK;QAAE,+JAAA,CAAA,SAAM;KAAC;IACvB,YAAY;QACV,CAAC,8JAAA,CAAA,QAAK,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD;QACf,CAAC,+JAAA,CAAA,SAAM,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD;IAClB;AACF","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/Providers.tsx"],"sourcesContent":["'use client';\n\nimport { WagmiProvider as WagmiProviderBase } from 'wagmi';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { config } from '@/lib/wagmi';\nimport { useState } from 'react';\n\nexport function WagmiProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(() => new QueryClient());\n\n  return (\n    <WagmiProviderBase config={config}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </WagmiProviderBase>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AALA;;;;;;AAOO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,IAAI,6KAAA,CAAA,cAAW;IAEpD,qBACE,8OAAC,+IAAA,CAAA,gBAAiB;QAAC,QAAQ,mIAAA,CAAA,SAAM;kBAC/B,cAAA,8OAAC,sLAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAAc;;;;;;;;;;;AAGjD","debugId":null}}]
}