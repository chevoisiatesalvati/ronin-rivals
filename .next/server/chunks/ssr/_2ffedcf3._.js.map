{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/lib/config.ts"],"sourcesContent":["// Contract configuration\nexport const CONTRACT_ADDRESS =\n  '0x5FbDB2315678afecb367f032d93F642f64180aa3' as `0x${string}`;\n\n// Network configuration\nexport const NETWORK_CONFIG = {\n  chainId: 2021, // Saigon testnet\n  name: 'Saigon Testnet',\n};\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AAClB,MAAM,mBACX;AAGK,MAAM,iBAAiB;IAC5B,SAAS;IACT,MAAM;AACR","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/lib/contract.ts"],"sourcesContent":["import { formatEther } from 'viem';\nimport {\n  useWriteContract,\n  useReadContract,\n  useWaitForTransactionReceipt,\n} from 'wagmi';\nimport { useAccount } from 'wagmi';\nimport { Samurai, Battle } from '@/types/game';\nimport { CONTRACT_ADDRESS } from './config';\n\n// Import the generated ABI from Hardhat compilation\nimport RoninRivalsArtifact from '../../artifacts/contracts/Game.sol/RoninRivals.json';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst CONTRACT_ABI = RoninRivalsArtifact.abi as any;\n\n// Hook for contract interactions\nexport const useContract = () => {\n  const { address } = useAccount();\n  const { writeContract, data: hash, isPending, error } = useWriteContract();\n  const { isLoading: isConfirming, isSuccess } = useWaitForTransactionReceipt({\n    hash,\n  });\n\n  const createSamurai = async (name: string) => {\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'createSamurai',\n      args: [name],\n    });\n  };\n\n  const upgradeStat = async (stat: number) => {\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'upgradeStat',\n      args: [stat],\n    });\n  };\n\n  const startBattle = async (opponent: `0x${string}`) => {\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'startBattle',\n      args: [opponent],\n    });\n  };\n\n  const executeTurn = async (battleId: bigint) => {\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'executeTurn',\n      args: [battleId],\n    });\n  };\n\n  return {\n    createSamurai,\n    upgradeStat,\n    startBattle,\n    executeTurn,\n    isPending,\n    isConfirming,\n    isSuccess,\n    error,\n    hash,\n  };\n};\n\n// Hook for reading contract data\nexport const useContractRead = () => {\n  const { address } = useAccount();\n\n  const { data: samurai } = useReadContract({\n    address: CONTRACT_ADDRESS,\n    abi: CONTRACT_ABI,\n    functionName: 'getSamurai',\n    args: address ? [address] : undefined,\n    query: {\n      enabled: !!address,\n    },\n  }) as { data: Samurai | undefined };\n\n  const { data: battleIdCounter } = useReadContract({\n    address: CONTRACT_ADDRESS,\n    abi: CONTRACT_ABI,\n    functionName: 'battleIdCounter',\n    query: {\n      enabled: true,\n    },\n  }) as { data: bigint | undefined };\n\n  const { data: minimumBet } = useReadContract({\n    address: CONTRACT_ADDRESS,\n    abi: CONTRACT_ABI,\n    functionName: 'MINIMUM_BET',\n    query: {\n      enabled: true,\n    },\n  }) as { data: bigint | undefined };\n\n  const { data: maximumBet } = useReadContract({\n    address: CONTRACT_ADDRESS,\n    abi: CONTRACT_ABI,\n    functionName: 'MAXIMUM_BET',\n    query: {\n      enabled: true,\n    },\n  }) as { data: bigint | undefined };\n\n  const { data: currentBattle } = useReadContract({\n    address: CONTRACT_ADDRESS,\n    abi: CONTRACT_ABI,\n    functionName: 'getBattle',\n    args:\n      battleIdCounter && battleIdCounter > 0n\n        ? [battleIdCounter - 1n]\n        : undefined,\n    query: {\n      enabled: !!battleIdCounter && battleIdCounter > 0n,\n    },\n  }) as { data: Battle | undefined };\n\n  return {\n    samurai,\n    battleIdCounter,\n    currentBattle,\n    minimumBet: minimumBet ? formatEther(minimumBet) : '0',\n    maximumBet: maximumBet ? formatEther(maximumBet) : '0',\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/TantoConnect.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { TantoConnectButton } from '@sky-mavis/tanto-widget';\nimport { useAccount, useBalance, useDisconnect } from 'wagmi';\nimport toast from 'react-hot-toast';\n\nexport default function TantoConnect() {\n  const { address, isConnected } = useAccount();\n  const { data: balance } = useBalance({ address });\n  const { disconnect } = useDisconnect();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleDisconnect = () => {\n    disconnect();\n    toast.success('Wallet disconnected');\n  };\n\n  // Don't render anything until mounted to avoid hydration mismatch\n  if (!mounted) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 flex items-center justify-center\">\n        <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-8 text-center\">\n          <h1 className=\"text-4xl font-bold text-white mb-8\">\n            ⚔️ Ronin Rivals ⚔️\n          </h1>\n          <p className=\"text-white/80 mb-8\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isConnected) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 flex items-center justify-center\">\n        <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-8 text-center\">\n          <h1 className=\"text-4xl font-bold text-white mb-8\">\n            ⚔️ Ronin Rivals ⚔️\n          </h1>\n          <p className=\"text-white/80 mb-8\">\n            Connect your wallet to begin your Samurai journey\n          </p>\n          <TantoConnectButton\n            onConnect={() => toast.success('Wallet connected successfully!')}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 mb-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-white\">⚔️ Ronin Rivals ⚔️</h1>\n        <div className=\"text-right\">\n          <p className=\"text-white/80 text-sm\">\n            Connected: {address?.slice(0, 6)}...{address?.slice(-4)}\n          </p>\n          <p className=\"text-white/80 text-sm\">\n            Balance: {balance ? (Number(balance.value) / 1e18).toFixed(4) : '0'}{' '}\n            RON\n          </p>\n          <button\n            onClick={handleDisconnect}\n            className=\"text-red-300 hover:text-red-100 text-sm\"\n          >\n            Disconnect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAC1C,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;QAAE;IAAQ;IAC/C,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB;QACA,uJAAA,CAAA,UAAK,CAAC,OAAO,CAAC;IAChB;IAEA,kEAAkE;IAClE,IAAI,CAAC,SAAS;QACZ,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;kCAGnD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAI1C;IAEA,IAAI,CAAC,aAAa;QAChB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;kCAGnD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,8OAAC,kLAAA,CAAA,qBAAkB;wBACjB,WAAW,IAAM,uJAAA,CAAA,UAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;IAKzC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAgC;;;;;;8BAC9C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;;gCAAwB;gCACvB,SAAS,MAAM,GAAG;gCAAG;gCAAI,SAAS,MAAM,CAAC;;;;;;;sCAEvD,8OAAC;4BAAE,WAAU;;gCAAwB;gCACzB,UAAU,CAAC,OAAO,QAAQ,KAAK,IAAI,IAAI,EAAE,OAAO,CAAC,KAAK;gCAAK;gCAAI;;;;;;;sCAG3E,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/SamuraiCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useContract, useContractRead } from '@/lib/contract';\nimport toast from 'react-hot-toast';\n\nexport default function SamuraiCard() {\n  const [samuraiName, setSamuraiName] = useState('');\n\n  const { createSamurai, upgradeStat, isPending, isSuccess, error } =\n    useContract();\n  const { samurai } = useContractRead();\n\n  // Handle success/error messages with useEffect\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Transaction successful!');\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Transaction failed: ${error.message}`);\n    }\n  }, [error]);\n\n  const handleCreateSamurai = async () => {\n    if (!samuraiName.trim()) {\n      toast.error('Please enter a Samurai name');\n      return;\n    }\n\n    try {\n      await createSamurai(samuraiName);\n      setSamuraiName('');\n    } catch (error) {\n      toast.error('Failed to create Samurai');\n      console.error(error);\n    }\n  };\n\n  const handleUpgradeStat = async (stat: number) => {\n    try {\n      await upgradeStat(stat);\n    } catch (error) {\n      toast.error('Failed to upgrade stat');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">🗡️ Your Samurai</h2>\n\n      {!samurai?.exists ? (\n        <div className=\"space-y-4\">\n          <p className=\"text-white/80\">\n            Create your Samurai to begin your journey\n          </p>\n          <input\n            type=\"text\"\n            value={samuraiName}\n            onChange={(e) => setSamuraiName(e.target.value)}\n            placeholder=\"Enter Samurai name\"\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-white/60 border border-white/20\"\n          />\n          <button\n            onClick={handleCreateSamurai}\n            disabled={isPending || !samuraiName.trim()}\n            className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors disabled:opacity-50\"\n          >\n            {isPending ? 'Creating...' : 'Create Samurai'}\n          </button>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          <div className=\"bg-white/5 rounded-lg p-4\">\n            <h3 className=\"text-xl font-bold text-white mb-2\">\n              {samurai.name}\n            </h3>\n            <div className=\"grid grid-cols-2 gap-2 text-sm text-white/80\">\n              <p>Level: {samurai.level.toString()}</p>\n              <p>Experience: {samurai.experience.toString()}</p>\n              <p>Skill Points: {samurai.skillPoints.toString()}</p>\n              <p>Battles Won: {samurai.battlesWon.toString()}</p>\n              <p>Battles Lost: {samurai.battlesLost.toString()}</p>\n            </div>\n          </div>\n\n          <div className=\"bg-white/5 rounded-lg p-4\">\n            <h4 className=\"text-lg font-bold text-white mb-2\">Stats</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Strength: {samurai.strength.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(0)}\n                  disabled={isPending || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +2\n                </button>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Defense: {samurai.defense.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(1)}\n                  disabled={isPending || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +1\n                </button>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Speed: {samurai.speed.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(2)}\n                  disabled={isPending || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +1\n                </button>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Health: {samurai.health.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(3)}\n                  disabled={isPending || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +10\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/BattleArena.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useContract, useContractRead } from '@/lib/contract';\nimport { Battle } from '@/types/game';\nimport toast from 'react-hot-toast';\n\ninterface BattleArenaProps {\n  connectedAddress: string | null;\n}\n\nexport default function BattleArena({ connectedAddress }: BattleArenaProps) {\n  const [opponentAddress, setOpponentAddress] = useState('');\n  const [betAmount, setBetAmount] = useState('0.01');\n\n  const { startBattle, executeTurn, isPending, isSuccess, error } =\n    useContract();\n  const { currentBattle, battleIdCounter } = useContractRead();\n\n  // Handle success/error messages with useEffect\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Transaction successful!');\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Transaction failed: ${error.message}`);\n    }\n  }, [error]);\n\n  const handleStartBattle = async () => {\n    if (!opponentAddress.trim()) {\n      toast.error('Please enter opponent address');\n      return;\n    }\n\n    try {\n      await startBattle(opponentAddress as `0x${string}`);\n      setOpponentAddress('');\n      setBetAmount('0.01');\n    } catch (error) {\n      toast.error('Failed to start battle');\n      console.error(error);\n    }\n  };\n\n  const handleExecuteTurn = async () => {\n    if (!battleIdCounter || battleIdCounter === 0n) {\n      toast.error('No active battle');\n      return;\n    }\n\n    try {\n      await executeTurn(battleIdCounter - 1n);\n    } catch (error) {\n      toast.error('Failed to execute turn');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">⚔️ Battle Arena</h2>\n\n      <div className=\"space-y-6\">\n        <div className=\"bg-white/5 rounded-lg p-4\">\n          <h4 className=\"text-lg font-bold text-white mb-2\">\n            Start New Battle\n          </h4>\n          <input\n            type=\"text\"\n            value={opponentAddress}\n            onChange={(e) => setOpponentAddress(e.target.value)}\n            placeholder=\"Opponent address (0x...)\"\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-white/60 border border-white/20 mb-3\"\n          />\n          <input\n            type=\"number\"\n            value={betAmount}\n            onChange={(e) => setBetAmount(e.target.value)}\n            placeholder=\"Bet amount (RON)\"\n            step=\"0.01\"\n            min=\"0.01\"\n            max=\"1\"\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-white/60 border border-white/20 mb-3\"\n          />\n          <button\n            onClick={handleStartBattle}\n            disabled={isPending || !opponentAddress.trim()}\n            className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors disabled:opacity-50\"\n          >\n            {isPending ? 'Starting Battle...' : 'Start Battle'}\n          </button>\n        </div>\n\n        {currentBattle && (\n          <div className=\"bg-white/5 rounded-lg p-4\">\n            <h4 className=\"text-lg font-bold text-white mb-2\">Active Battle</h4>\n            <div className=\"space-y-2 text-sm text-white/80\">\n              <p>Player 1 Health: {currentBattle.player1Health.toString()}</p>\n              <p>Player 2 Health: {currentBattle.player2Health.toString()}</p>\n              <p>\n                Current Turn:{' '}\n                {currentBattle.currentTurn === connectedAddress\n                  ? 'Your turn'\n                  : \"Opponent's turn\"}\n              </p>\n              <p>Turn Count: {currentBattle.turnCount.toString()}</p>\n            </div>\n            {currentBattle.currentTurn === connectedAddress && (\n              <button\n                onClick={handleExecuteTurn}\n                disabled={isPending}\n                className=\"w-full mt-3 bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg transition-colors disabled:opacity-50\"\n              >\n                {isPending ? 'Executing...' : 'Execute Turn'}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { setContractAddress } from '@/lib/contract';\nimport TantoConnect from '@/components/TantoConnect';\nimport SamuraiCard from '@/components/SamuraiCard';\nimport BattleArena from '@/components/BattleArena';\n\nexport default function Home() {\n  const { address, isConnected } = useAccount();\n\n  // Set contract address (you'll need to update this after deployment)\n  useEffect(() => {\n    // Replace with your deployed contract address\n    setContractAddress(\n      '0x0000000000000000000000000000000000000000' as `0x${string}`\n    );\n  }, []);\n\n  if (!isConnected) {\n    return <TantoConnect />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 p-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <TantoConnect />\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <SamuraiCard />\n          <BattleArena connectedAddress={address || null} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS;IACtB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE1C,qEAAqE;IACrE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,8CAA8C;QAC9C,CAAA,GAAA,sHAAA,CAAA,qBAAkB,AAAD,EACf;IAEJ,GAAG,EAAE;IAEL,IAAI,CAAC,aAAa;QAChB,qBAAO,8OAAC,kIAAA,CAAA,UAAY;;;;;IACtB;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,kIAAA,CAAA,UAAY;;;;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,iIAAA,CAAA,UAAW;;;;;sCACZ,8OAAC,iIAAA,CAAA,UAAW;4BAAC,kBAAkB,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAKpD","debugId":null}}]
}