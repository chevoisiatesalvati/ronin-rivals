{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/TantoConnect.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { TantoConnectButton } from '@sky-mavis/tanto-widget';\nimport { useAccount, useBalance, useDisconnect } from 'wagmi';\nimport toast from 'react-hot-toast';\n\ninterface TantoConnectProps {\n  onAddressChange: (address: string | null) => void;\n  onBalanceChange: (balance: string) => void;\n}\n\nexport default function TantoConnect({\n  onAddressChange,\n  onBalanceChange,\n}: TantoConnectProps) {\n  const { address, isConnected } = useAccount();\n  const { data: balance } = useBalance({ address });\n  const { disconnect } = useDisconnect();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // Update parent components when address changes\n  useEffect(() => {\n    if (!mounted) return;\n\n    if (isConnected && address) {\n      onAddressChange(address);\n      if (balance) {\n        onBalanceChange(balance.value.toString());\n      }\n    } else {\n      onAddressChange(null);\n      onBalanceChange('0');\n    }\n  }, [\n    mounted,\n    isConnected,\n    address,\n    balance,\n    onAddressChange,\n    onBalanceChange,\n  ]);\n\n  const handleDisconnect = () => {\n    disconnect();\n    toast.success('Wallet disconnected');\n  };\n\n  // Don't render anything until mounted to avoid hydration mismatch\n  if (!mounted) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 flex items-center justify-center\">\n        <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-8 text-center\">\n          <h1 className=\"text-4xl font-bold text-white mb-8\">\n            ⚔️ Ronin Rivals ⚔️\n          </h1>\n          <p className=\"text-white/80 mb-8\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isConnected) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 flex items-center justify-center\">\n        <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-8 text-center\">\n          <h1 className=\"text-4xl font-bold text-white mb-8\">\n            ⚔️ Ronin Rivals ⚔️\n          </h1>\n          <p className=\"text-white/80 mb-8\">\n            Connect your wallet to begin your Samurai journey\n          </p>\n          <TantoConnectButton\n            onConnect={() => toast.success('Wallet connected successfully!')}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 mb-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-white\">⚔️ Ronin Rivals ⚔️</h1>\n        <div className=\"text-right\">\n          <p className=\"text-white/80 text-sm\">\n            Connected: {address?.slice(0, 6)}...{address?.slice(-4)}\n          </p>\n          <p className=\"text-white/80 text-sm\">\n            Balance: {balance ? (Number(balance.value) / 1e18).toFixed(4) : '0'}{' '}\n            RON\n          </p>\n          <button\n            onClick={handleDisconnect}\n            className=\"text-red-300 hover:text-red-100 text-sm\"\n          >\n            Disconnect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;AALA;;;;;AAYe,SAAS,aAAa,EACnC,eAAe,EACf,eAAe,EACG;;IAClB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAC1C,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;QAAE;IAAQ;IAC/C,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,WAAW;QACb;iCAAG,EAAE;IAEL,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,CAAC,SAAS;YAEd,IAAI,eAAe,SAAS;gBAC1B,gBAAgB;gBAChB,IAAI,SAAS;oBACX,gBAAgB,QAAQ,KAAK,CAAC,QAAQ;gBACxC;YACF,OAAO;gBACL,gBAAgB;gBAChB,gBAAgB;YAClB;QACF;iCAAG;QACD;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,mBAAmB;QACvB;QACA,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;IAChB;IAEA,kEAAkE;IAClE,IAAI,CAAC,SAAS;QACZ,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAqC;;;;;;kCAGnD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAI1C;IAEA,IAAI,CAAC,aAAa;QAChB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAqC;;;;;;kCAGnD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,6LAAC,qLAAA,CAAA,qBAAkB;wBACjB,WAAW,IAAM,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;IAKzC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAgC;;;;;;8BAC9C,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;;gCAAwB;gCACvB,SAAS,MAAM,GAAG;gCAAG;gCAAI,SAAS,MAAM,CAAC;;;;;;;sCAEvD,6LAAC;4BAAE,WAAU;;gCAAwB;gCACzB,UAAU,CAAC,OAAO,QAAQ,KAAK,IAAI,IAAI,EAAE,OAAO,CAAC,KAAK;gCAAK;gCAAI;;;;;;;sCAG3E,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;GA9FwB;;QAIW,8JAAA,CAAA,aAAU;QACjB,8JAAA,CAAA,aAAU;QACb,iKAAA,CAAA,gBAAa;;;KANd","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/lib/contract.ts"],"sourcesContent":["import { formatEther } from 'viem';\nimport {\n  useWriteContract,\n  useReadContract,\n  useWaitForTransactionReceipt,\n} from 'wagmi';\nimport { useAccount } from 'wagmi';\nimport { Samurai, Battle } from '@/types/game';\n\n// Import the generated ABI from Hardhat compilation\nimport RoninRivalsArtifact from '../../artifacts/contracts/Game.sol/RoninRivals.json';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst CONTRACT_ABI = RoninRivalsArtifact.abi as any;\n\n// Contract address - will be set after deployment\nlet CONTRACT_ADDRESS: `0x${string}` | null = null;\n\n// Set contract address after deployment\nexport const setContractAddress = (address: `0x${string}`) => {\n  CONTRACT_ADDRESS = address;\n};\n\n// Hook for contract interactions\nexport const useContract = () => {\n  const { address } = useAccount();\n  const { writeContract, data: hash, isPending, error } = useWriteContract();\n  const { isLoading: isConfirming, isSuccess } = useWaitForTransactionReceipt({\n    hash,\n  });\n\n  const createSamurai = async (name: string) => {\n    if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'createSamurai',\n      args: [name],\n    });\n  };\n\n  const upgradeStat = async (stat: number) => {\n    if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'upgradeStat',\n      args: [stat],\n    });\n  };\n\n  const startBattle = async (opponent: `0x${string}`) => {\n    if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'startBattle',\n      args: [opponent],\n    });\n  };\n\n  const executeTurn = async (battleId: bigint) => {\n    if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n    if (!address) throw new Error('Wallet not connected');\n\n    writeContract({\n      address: CONTRACT_ADDRESS,\n      abi: CONTRACT_ABI,\n      functionName: 'executeTurn',\n      args: [battleId],\n    });\n  };\n\n  return {\n    createSamurai,\n    upgradeStat,\n    startBattle,\n    executeTurn,\n    isPending,\n    isConfirming,\n    isSuccess,\n    error,\n    hash,\n  };\n};\n\n// Hook for reading contract data\nexport const useContractRead = () => {\n  const { address } = useAccount();\n\n  const { data: samurai } = useReadContract({\n    address: CONTRACT_ADDRESS as `0x${string}`,\n    abi: CONTRACT_ABI,\n    functionName: 'getSamurai',\n    args: address ? [address] : undefined,\n    query: {\n      enabled: !!CONTRACT_ADDRESS && !!address,\n    },\n  }) as { data: Samurai | undefined };\n\n  const { data: battleIdCounter } = useReadContract({\n    address: CONTRACT_ADDRESS as `0x${string}`,\n    abi: CONTRACT_ABI,\n    functionName: 'battleIdCounter',\n    query: {\n      enabled: !!CONTRACT_ADDRESS,\n    },\n  }) as { data: bigint | undefined };\n\n  const { data: minimumBet } = useReadContract({\n    address: CONTRACT_ADDRESS as `0x${string}`,\n    abi: CONTRACT_ABI,\n    functionName: 'MINIMUM_BET',\n    query: {\n      enabled: !!CONTRACT_ADDRESS,\n    },\n  }) as { data: bigint | undefined };\n\n  const { data: maximumBet } = useReadContract({\n    address: CONTRACT_ADDRESS as `0x${string}`,\n    abi: CONTRACT_ABI,\n    functionName: 'MAXIMUM_BET',\n    query: {\n      enabled: !!CONTRACT_ADDRESS,\n    },\n  }) as { data: bigint | undefined };\n\n  const { data: currentBattle } = useReadContract({\n    address: CONTRACT_ADDRESS as `0x${string}`,\n    abi: CONTRACT_ABI,\n    functionName: 'getBattle',\n    args:\n      battleIdCounter && battleIdCounter > 0n\n        ? [battleIdCounter - 1n]\n        : undefined,\n    query: {\n      enabled: !!CONTRACT_ADDRESS && !!battleIdCounter && battleIdCounter > 0n,\n    },\n  }) as { data: Battle | undefined };\n\n  return {\n    samurai,\n    battleIdCounter,\n    currentBattle,\n    minimumBet: minimumBet ? formatEther(minimumBet) : '0',\n    maximumBet: maximumBet ? formatEther(maximumBet) : '0',\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/SamuraiCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useContract } from '@/lib/contract';\nimport { Samurai } from '@/types/game';\nimport toast from 'react-hot-toast';\n\ninterface SamuraiCardProps {\n  samurai: Samurai | null;\n  onSamuraiUpdate: () => void;\n}\n\nexport default function SamuraiCard({\n  samurai,\n  onSamuraiUpdate,\n}: SamuraiCardProps) {\n  const { address } = useAccount();\n  const { createSamurai, upgradeStat, isPending, isSuccess } = useContract();\n  const [samuraiName, setSamuraiName] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n\n  const handleCreateSamurai = async () => {\n    if (!address) {\n      toast.error('Please connect your wallet first');\n      return;\n    }\n\n    if (!samuraiName.trim()) {\n      toast.error('Please enter a samurai name');\n      return;\n    }\n\n    setIsCreating(true);\n    toast.loading('Creating your samurai...');\n\n    try {\n      await createSamurai(samuraiName);\n      setSamuraiName('');\n    } catch (error) {\n      console.error('Create samurai error:', error);\n      toast.error('Failed to create samurai');\n      setIsCreating(false);\n    }\n  };\n\n  const handleUpgradeStat = async (statIndex: number) => {\n    if (!address) {\n      toast.error('Please connect your wallet first');\n      return;\n    }\n\n    if (!samurai) {\n      toast.error('No samurai found');\n      return;\n    }\n\n    toast.loading('Upgrading stat...');\n\n    try {\n      await upgradeStat(statIndex);\n    } catch (error) {\n      console.error('Upgrade stat error:', error);\n      toast.error('Failed to upgrade stat');\n    }\n  };\n\n  // Handle transaction success\n  if (isSuccess) {\n    if (isCreating) {\n      setIsCreating(false);\n      toast.success('Samurai created successfully!');\n      onSamuraiUpdate();\n    } else {\n      toast.success('Stat upgraded successfully!');\n      onSamuraiUpdate();\n    }\n  }\n\n  if (!samurai) {\n    return (\n      <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 mb-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-4\">\n          🗡️ Create Your Samurai\n        </h2>\n\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-white text-sm font-medium mb-2\">\n              Samurai Name\n            </label>\n            <input\n              type=\"text\"\n              value={samuraiName}\n              onChange={(e) => setSamuraiName(e.target.value)}\n              className=\"w-full px-3 py-2 bg-gray-800 text-white rounded border border-gray-600 focus:border-blue-500 focus:outline-none\"\n              placeholder=\"Enter your samurai's name\"\n              maxLength={32}\n            />\n          </div>\n\n          <button\n            onClick={handleCreateSamurai}\n            disabled={isCreating || isPending || !samuraiName.trim()}\n            className=\"w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {isCreating || isPending ? 'Creating...' : '🗡️ Create Samurai'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 mb-6\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">🗡️ Your Samurai</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <h3 className=\"text-xl font-semibold text-white\">{samurai.name}</h3>\n          <div className=\"bg-gray-800/50 rounded-lg p-4 space-y-2\">\n            <p className=\"text-white\">\n              Strength: {samurai.strength.toString()}\n            </p>\n            <p className=\"text-white\">Defense: {samurai.defense.toString()}</p>\n            <p className=\"text-white\">Speed: {samurai.speed.toString()}</p>\n            <p className=\"text-white\">Health: {samurai.health.toString()}</p>\n            <p className=\"text-white\">\n              Experience: {samurai.experience.toString()}\n            </p>\n            <p className=\"text-white\">Level: {samurai.level.toString()}</p>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-xl font-semibold text-white\">Upgrade Stats</h3>\n          <div className=\"space-y-3\">\n            <button\n              onClick={() => handleUpgradeStat(0)}\n              disabled={isPending}\n              className=\"w-full px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50 transition-colors\"\n            >\n              Upgrade Strength (Cost: 1 EXP)\n            </button>\n\n            <button\n              onClick={() => handleUpgradeStat(1)}\n              disabled={isPending}\n              className=\"w-full px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50 transition-colors\"\n            >\n              Upgrade Defense (Cost: 1 EXP)\n            </button>\n\n            <button\n              onClick={() => handleUpgradeStat(2)}\n              disabled={isPending}\n              className=\"w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n            >\n              Upgrade Speed (Cost: 1 EXP)\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/BattleArena.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAccount } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { useContract } from '@/lib/contract';\nimport toast from 'react-hot-toast';\n\ninterface BattleArenaProps {\n  samuraiId: number;\n  samuraiStats: {\n    strength: number;\n    agility: number;\n    intelligence: number;\n    experience: number;\n  };\n  onBattleComplete: () => void;\n}\n\nexport default function BattleArena({\n  samuraiId,\n  samuraiStats,\n  onBattleComplete,\n}: BattleArenaProps) {\n  const { address } = useAccount();\n  const [betAmount, setBetAmount] = useState('0.01');\n  const [isBattling, setIsBattling] = useState(false);\n\n  const { startBattle, isPending, isSuccess } = useContract();\n\n  const handleBattle = async () => {\n    if (!address) {\n      toast.error('Please connect your wallet first');\n      return;\n    }\n\n    if (!betAmount || parseFloat(betAmount) <= 0) {\n      toast.error('Please enter a valid bet amount');\n      return;\n    }\n\n    setIsBattling(true);\n    toast.loading('Initiating battle...');\n\n    try {\n      // For now, we'll use a placeholder opponent address\n      // In a real implementation, you'd select an opponent\n      const opponentAddress =\n        '0x0000000000000000000000000000000000000001' as `0x${string}`;\n      await startBattle(opponentAddress);\n    } catch (error) {\n      console.error('Battle error:', error);\n      toast.error('Failed to initiate battle');\n      setIsBattling(false);\n    }\n  };\n\n  // Handle transaction success\n  if (isSuccess && isBattling) {\n    setIsBattling(false);\n    toast.success('Battle completed! Check your rewards.');\n    onBattleComplete();\n  }\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 mb-6\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">⚔️ Battle Arena</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <h3 className=\"text-xl font-semibold text-white\">Your Samurai</h3>\n          <div className=\"bg-gray-800/50 rounded-lg p-4 space-y-2\">\n            <p className=\"text-white\">Strength: {samuraiStats.strength}</p>\n            <p className=\"text-white\">Agility: {samuraiStats.agility}</p>\n            <p className=\"text-white\">\n              Intelligence: {samuraiStats.intelligence}\n            </p>\n            <p className=\"text-white\">Experience: {samuraiStats.experience}</p>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-xl font-semibold text-white\">Battle Settings</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-white text-sm font-medium mb-2\">\n                Bet Amount (RON)\n              </label>\n              <input\n                type=\"number\"\n                value={betAmount}\n                onChange={(e) => setBetAmount(e.target.value)}\n                min=\"0.01\"\n                step=\"0.01\"\n                className=\"w-full px-3 py-2 bg-gray-800 text-white rounded border border-gray-600 focus:border-blue-500 focus:outline-none\"\n                placeholder=\"0.01\"\n              />\n            </div>\n\n            <button\n              onClick={handleBattle}\n              disabled={isBattling || isPending || !address}\n              className=\"w-full px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {isBattling || isPending ? 'Battling...' : '⚔️ Enter Battle'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;;;AANA;;;;;AAmBe,SAAS,YAAY,EAClC,SAAS,EACT,YAAY,EACZ,gBAAgB,EACC;;IACjB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD;IAExD,MAAM,eAAe;QACnB,IAAI,CAAC,SAAS;YACZ,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,aAAa,WAAW,cAAc,GAAG;YAC5C,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,cAAc;QACd,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;QAEd,IAAI;YACF,oDAAoD;YACpD,qDAAqD;YACrD,MAAM,kBACJ;YACF,MAAM,YAAY;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YACZ,cAAc;QAChB;IACF;IAEA,6BAA6B;IAC7B,IAAI,aAAa,YAAY;QAC3B,cAAc;QACd,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;QACd;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAqC;;;;;;0BAEnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;;4CAAa;4CAAW,aAAa,QAAQ;;;;;;;kDAC1D,6LAAC;wCAAE,WAAU;;4CAAa;4CAAU,aAAa,OAAO;;;;;;;kDACxD,6LAAC;wCAAE,WAAU;;4CAAa;4CACT,aAAa,YAAY;;;;;;;kDAE1C,6LAAC;wCAAE,WAAU;;4CAAa;4CAAa,aAAa,UAAU;;;;;;;;;;;;;;;;;;;kCAIlE,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAA4C;;;;;;0DAG7D,6LAAC;gDACC,MAAK;gDACL,OAAO;gDACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gDAC5C,KAAI;gDACJ,MAAK;gDACL,WAAU;gDACV,aAAY;;;;;;;;;;;;kDAIhB,6LAAC;wCACC,SAAS;wCACT,UAAU,cAAc,aAAa,CAAC;wCACtC,WAAU;kDAET,cAAc,YAAY,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzD;GA5FwB;;QAKF,8JAAA,CAAA,aAAU;QAIgB,yHAAA,CAAA,cAAW;;;KATnC","debugId":null}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport TantoConnect from '@/components/TantoConnect';\nimport SamuraiCard from '@/components/SamuraiCard';\nimport BattleArena from '@/components/BattleArena';\nimport { useContractRead } from '@/lib/contract';\nimport { Samurai } from '@/types/game';\n\nexport default function Home() {\n  const { address, isConnected } = useAccount();\n  const { samurai } = useContractRead();\n  const [currentSamurai, setCurrentSamurai] = useState<Samurai | null>(null);\n\n  // Update current samurai when contract data changes\n  useEffect(() => {\n    if (samurai && samurai.exists) {\n      setCurrentSamurai(samurai);\n    } else {\n      setCurrentSamurai(null);\n    }\n  }, [samurai]);\n\n  const handleSamuraiUpdate = () => {\n    // This will trigger a refetch of the samurai data\n    // The useEffect above will handle updating the state\n  };\n\n  const handleBattleComplete = () => {\n    // This will trigger a refetch of the samurai data\n    // The useEffect above will handle updating the state\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-4\">\n            ⚔️ Ronin Rivals ⚔️\n          </h1>\n          <p className=\"text-white/80 text-lg\">\n            Forge your Samurai and battle for glory on the Ronin network\n          </p>\n        </div>\n\n        {!isConnected ? (\n          <div className=\"flex justify-center\">\n            <TantoConnect />\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            <SamuraiCard\n              samurai={currentSamurai}\n              onSamuraiUpdate={handleSamuraiUpdate}\n            />\n\n            {currentSamurai && (\n              <BattleArena\n                samuraiId={0} // We'll need to get this from the contract\n                samuraiStats={{\n                  strength: Number(currentSamurai.strength),\n                  agility: Number(currentSamurai.defense), // Using defense as agility for now\n                  intelligence: Number(currentSamurai.speed), // Using speed as intelligence for now\n                  experience: Number(currentSamurai.experience),\n                }}\n                onBattleComplete={handleBattleComplete}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AAUe,SAAS;;IACtB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAC1C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD;IAClC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAErE,oDAAoD;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,IAAI,WAAW,QAAQ,MAAM,EAAE;gBAC7B,kBAAkB;YACpB,OAAO;gBACL,kBAAkB;YACpB;QACF;yBAAG;QAAC;KAAQ;IAEZ,MAAM,sBAAsB;IAC1B,kDAAkD;IAClD,qDAAqD;IACvD;IAEA,MAAM,uBAAuB;IAC3B,kDAAkD;IAClD,qDAAqD;IACvD;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCAGnD,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;gBAKtC,CAAC,4BACA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,qIAAA,CAAA,UAAY;;;;;;;;;yCAGf,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,oIAAA,CAAA,UAAW;4BACV,SAAS;4BACT,iBAAiB;;;;;;wBAGlB,gCACC,6LAAC,oIAAA,CAAA,UAAW;4BACV,WAAW;4BACX,cAAc;gCACZ,UAAU,OAAO,eAAe,QAAQ;gCACxC,SAAS,OAAO,eAAe,OAAO;gCACtC,cAAc,OAAO,eAAe,KAAK;gCACzC,YAAY,OAAO,eAAe,UAAU;4BAC9C;4BACA,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;AAQlC;GAhEwB;;QACW,8JAAA,CAAA,aAAU;QACvB,yHAAA,CAAA,kBAAe;;;KAFb","debugId":null}}]
}