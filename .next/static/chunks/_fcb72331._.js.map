{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/lib/waypoint.ts"],"sourcesContent":["import { WaypointProvider } from '@sky-mavis/waypoint';\nimport {\n  createPublicClient,\n  createWalletClient,\n  custom,\n  http,\n  type Abi,\n} from 'viem';\nimport { saigon } from 'viem/chains';\n\n// Initialize Ronin Waypoint Provider\nexport const waypointProvider = WaypointProvider.create({\n  // Replace with your actual client ID from Ronin Waypoint\n  clientId:\n    process.env.NEXT_PUBLIC_RONIN_WAYPOINT_CLIENT_ID ||\n    '9b577a44-ce2f-44b2-a59d-dfcadfd1a93b',\n  chainId: 2021, // Saigon testnet\n  popupCloseDelay: 4000,\n});\n\n// Create viem clients for blockchain interactions\nconst publicClient = createPublicClient({\n  chain: saigon,\n  transport: http(),\n});\n\nconst walletClient = createWalletClient({\n  chain: saigon,\n  transport: custom(waypointProvider),\n});\n\n// Wallet connection utilities\nexport const connectWallet = async () => {\n  try {\n    const result = await waypointProvider.connect();\n    return result.address;\n  } catch (error) {\n    console.error('Failed to connect wallet:', error);\n    throw error;\n  }\n};\n\nexport const disconnectWallet = () => {\n  waypointProvider.disconnect();\n};\n\nexport const getConnectedAddress = async (): Promise<string | null> => {\n  try {\n    const accounts = await walletClient.getAddresses();\n    return accounts.length > 0 ? accounts[0] : null;\n  } catch (error) {\n    console.error('Failed to get connected address:', error);\n    return null;\n  }\n};\n\nexport const getBalance = async (address: `0x${string}`): Promise<string> => {\n  try {\n    const balance = await publicClient.getBalance({ address });\n    return balance.toString();\n  } catch (error) {\n    console.error('Failed to get balance:', error);\n    throw error;\n  }\n};\n\n// Sign message utility\nexport const signMessage = async (message: string): Promise<string> => {\n  try {\n    const accounts = await walletClient.getAddresses();\n    if (!accounts.length) {\n      throw new Error('No accounts connected');\n    }\n\n    const signature = await walletClient.signMessage({\n      message,\n      account: accounts[0],\n    });\n\n    return signature;\n  } catch (error) {\n    console.error('Failed to sign message:', error);\n    throw error;\n  }\n};\n\n// Write contract utility for smart contract interactions\nexport const writeContract = async (\n  address: `0x${string}`,\n  abi: Abi,\n  functionName: string,\n  args: unknown[] = []\n): Promise<string> => {\n  try {\n    const accounts = await walletClient.getAddresses();\n    if (!accounts.length) {\n      throw new Error('No accounts connected');\n    }\n\n    const hash = await walletClient.writeContract({\n      address,\n      abi,\n      functionName,\n      args,\n      account: accounts[0],\n    });\n\n    return hash;\n  } catch (error) {\n    console.error('Failed to write contract:', error);\n    throw error;\n  }\n};\n\n// Read contract utility for smart contract interactions\nexport const readContract = async (\n  address: `0x${string}`,\n  abi: Abi,\n  functionName: string,\n  args: unknown[] = []\n): Promise<unknown> => {\n  try {\n    const result = await publicClient.readContract({\n      address,\n      abi,\n      functionName,\n      args,\n    });\n\n    return result;\n  } catch (error) {\n    console.error('Failed to read contract:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;;;;;;;;AAcI;AAdJ;AACA;AAAA;AAAA;AAAA;AAOA;;;;AAGO,MAAM,mBAAmB,kLAAA,CAAA,mBAAgB,CAAC,MAAM,CAAC;IACtD,yDAAyD;IACzD,UACE,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,oCAAoC,IAChD;IACF,SAAS;IACT,iBAAiB;AACnB;AAEA,kDAAkD;AAClD,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,qBAAkB,AAAD,EAAE;IACtC,OAAO,kKAAA,CAAA,SAAM;IACb,WAAW,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD;AAChB;AAEA,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,qBAAkB,AAAD,EAAE;IACtC,OAAO,kKAAA,CAAA,SAAM;IACb,WAAW,CAAA,GAAA,kKAAA,CAAA,SAAM,AAAD,EAAE;AACpB;AAGO,MAAM,gBAAgB;IAC3B,IAAI;QACF,MAAM,SAAS,MAAM,iBAAiB,OAAO;QAC7C,OAAO,OAAO,OAAO;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF;AAEO,MAAM,mBAAmB;IAC9B,iBAAiB,UAAU;AAC7B;AAEO,MAAM,sBAAsB;IACjC,IAAI;QACF,MAAM,WAAW,MAAM,aAAa,YAAY;QAChD,OAAO,SAAS,MAAM,GAAG,IAAI,QAAQ,CAAC,EAAE,GAAG;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;IACT;AACF;AAEO,MAAM,aAAa,OAAO;IAC/B,IAAI;QACF,MAAM,UAAU,MAAM,aAAa,UAAU,CAAC;YAAE;QAAQ;QACxD,OAAO,QAAQ,QAAQ;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM;IACR;AACF;AAGO,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,WAAW,MAAM,aAAa,YAAY;QAChD,IAAI,CAAC,SAAS,MAAM,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,MAAM,aAAa,WAAW,CAAC;YAC/C;YACA,SAAS,QAAQ,CAAC,EAAE;QACtB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACR;AACF;AAGO,MAAM,gBAAgB,OAC3B,SACA,KACA,cACA,OAAkB,EAAE;IAEpB,IAAI;QACF,MAAM,WAAW,MAAM,aAAa,YAAY;QAChD,IAAI,CAAC,SAAS,MAAM,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,aAAa,aAAa,CAAC;YAC5C;YACA;YACA;YACA;YACA,SAAS,QAAQ,CAAC,EAAE;QACtB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF;AAGO,MAAM,eAAe,OAC1B,SACA,KACA,cACA,OAAkB,EAAE;IAEpB,IAAI;QACF,MAAM,SAAS,MAAM,aAAa,YAAY,CAAC;YAC7C;YACA;YACA;YACA;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/lib/contract.ts"],"sourcesContent":["import { formatEther } from 'viem';\nimport { writeContract, readContract } from './waypoint';\n\n// Import the generated ABI from Hardhat compilation\nimport RoninRivalsArtifact from '../../artifacts/contracts/Game.sol/RoninRivals.json';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst CONTRACT_ABI = RoninRivalsArtifact.abi as any;\n\n// Contract address - will be set after deployment\nlet CONTRACT_ADDRESS: `0x${string}` | null = null;\n\n// Set contract address after deployment\nexport const setContractAddress = (address: `0x${string}`) => {\n  CONTRACT_ADDRESS = address;\n};\n\n// Contract interaction functions\nexport const createSamurai = async (name: string) => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const hash = await writeContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'createSamurai',\n    [name]\n  );\n\n  return hash;\n};\n\nexport const upgradeStat = async (stat: number) => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const hash = await writeContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'upgradeStat',\n    [stat]\n  );\n\n  return hash;\n};\n\nexport const startBattle = async (\n  opponent: `0x${string}`,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _betAmount: string\n) => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const hash = await writeContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'startBattle',\n    [opponent]\n  );\n\n  return hash;\n};\n\nexport const executeTurn = async (battleId: bigint) => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const hash = await writeContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'executeTurn',\n    [battleId]\n  );\n\n  return hash;\n};\n\n// Read functions\nexport const getSamurai = async (playerAddress: `0x${string}`) => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const samurai = await readContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'getSamurai',\n    [playerAddress]\n  );\n\n  return samurai;\n};\n\nexport const getBattle = async (battleId: bigint) => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const battle = await readContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'getBattle',\n    [battleId]\n  );\n\n  return battle;\n};\n\nexport const getBattleIdCounter = async () => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const counter = await readContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'battleIdCounter',\n    []\n  );\n\n  return counter;\n};\n\nexport const getMinimumBet = async () => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const minBet = await readContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'MINIMUM_BET',\n    []\n  );\n\n  return formatEther(minBet as bigint);\n};\n\nexport const getMaximumBet = async () => {\n  if (!CONTRACT_ADDRESS) throw new Error('Contract not deployed');\n\n  const maxBet = await readContract(\n    CONTRACT_ADDRESS,\n    CONTRACT_ABI,\n    'MAXIMUM_BET',\n    []\n  );\n\n  return formatEther(maxBet as bigint);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACA;AAEA,oDAAoD;AACpD;;;;AAEA,8DAA8D;AAC9D,MAAM,eAAe,4HAAA,CAAA,UAAmB,CAAC,GAAG;AAE5C,kDAAkD;AAClD,IAAI,mBAAyC;AAGtC,MAAM,qBAAqB,CAAC;IACjC,mBAAmB;AACrB;AAGO,MAAM,gBAAgB,OAAO;IAClC,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAC7B,kBACA,cACA,iBACA;QAAC;KAAK;IAGR,OAAO;AACT;AAEO,MAAM,cAAc,OAAO;IAChC,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAC7B,kBACA,cACA,eACA;QAAC;KAAK;IAGR,OAAO;AACT;AAEO,MAAM,cAAc,OACzB,UACA,6DAA6D;AAC7D;IAEA,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAC7B,kBACA,cACA,eACA;QAAC;KAAS;IAGZ,OAAO;AACT;AAEO,MAAM,cAAc,OAAO;IAChC,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAC7B,kBACA,cACA,eACA;QAAC;KAAS;IAGZ,OAAO;AACT;AAGO,MAAM,aAAa,OAAO;IAC/B,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAC/B,kBACA,cACA,cACA;QAAC;KAAc;IAGjB,OAAO;AACT;AAEO,MAAM,YAAY,OAAO;IAC9B,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,SAAS,MAAM,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAC9B,kBACA,cACA,aACA;QAAC;KAAS;IAGZ,OAAO;AACT;AAEO,MAAM,qBAAqB;IAChC,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAC/B,kBACA,cACA,mBACA,EAAE;IAGJ,OAAO;AACT;AAEO,MAAM,gBAAgB;IAC3B,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,SAAS,MAAM,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAC9B,kBACA,cACA,eACA,EAAE;IAGJ,OAAO,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE;AACrB;AAEO,MAAM,gBAAgB;IAC3B,IAAI,CAAC,kBAAkB,MAAM,IAAI,MAAM;IAEvC,MAAM,SAAS,MAAM,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAC9B,kBACA,cACA,eACA,EAAE;IAGJ,OAAO,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE;AACrB","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/WalletConnect.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  connectWallet,\n  disconnectWallet,\n  getConnectedAddress,\n  getBalance,\n} from '@/lib/waypoint';\n\ninterface WalletConnectProps {\n  onAddressChange: (address: string | null) => void;\n  onBalanceChange: (balance: string) => void;\n}\n\nexport default function WalletConnect({\n  onAddressChange,\n  onBalanceChange,\n}: WalletConnectProps) {\n  const [connectedAddress, setConnectedAddress] = useState<string | null>(null);\n  const [balance, setBalance] = useState<string>('0');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    const address = await getConnectedAddress();\n    setConnectedAddress(address);\n    onAddressChange(address);\n    if (address) {\n      await loadBalance(address);\n    }\n  };\n\n  const loadBalance = async (address: string) => {\n    try {\n      const bal = await getBalance(address as `0x${string}`);\n      setBalance(bal);\n      onBalanceChange(bal);\n    } catch (error) {\n      console.error('Failed to load balance:', error);\n    }\n  };\n\n  const handleConnect = async () => {\n    setLoading(true);\n    try {\n      const address = await connectWallet();\n      setConnectedAddress(address);\n      onAddressChange(address);\n      await loadBalance(address);\n      setMessage('Wallet connected successfully!');\n    } catch (error) {\n      setMessage('Failed to connect wallet');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setConnectedAddress(null);\n    setBalance('0');\n    onAddressChange(null);\n    onBalanceChange('0');\n    setMessage('Wallet disconnected');\n  };\n\n  if (!connectedAddress) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 flex items-center justify-center\">\n        <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-8 text-center\">\n          <h1 className=\"text-4xl font-bold text-white mb-8\">\n            ⚔️ Ronin Rivals ⚔️\n          </h1>\n          <p className=\"text-white/80 mb-8\">\n            Connect your Ronin Waypoint wallet to begin your Samurai journey\n          </p>\n          <button\n            onClick={handleConnect}\n            disabled={loading}\n            className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Connecting...' : 'Connect Wallet'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 mb-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-white\">⚔️ Ronin Rivals ⚔️</h1>\n        <div className=\"text-right\">\n          <p className=\"text-white/80 text-sm\">\n            Connected: {connectedAddress?.slice(0, 6)}...\n            {connectedAddress?.slice(-4)}\n          </p>\n          <p className=\"text-white/80 text-sm\">\n            Balance: {parseFloat(balance) / 1e18} RON\n          </p>\n          <button\n            onClick={handleDisconnect}\n            className=\"text-red-300 hover:text-red-100 text-sm\"\n          >\n            Disconnect\n          </button>\n        </div>\n      </div>\n      {message && (\n        <div className=\"mt-4\">\n          <p className=\"text-white text-center\">{message}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAee,SAAS,cAAc,EACpC,eAAe,EACf,eAAe,EACI;;IACnB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR;QACF;kCAAG,EAAE;IAEL,MAAM,kBAAkB;QACtB,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,sBAAmB,AAAD;QACxC,oBAAoB;QACpB,gBAAgB;QAChB,IAAI,SAAS;YACX,MAAM,YAAY;QACpB;IACF;IAEA,MAAM,cAAc,OAAO;QACzB,IAAI;YACF,MAAM,MAAM,MAAM,CAAA,GAAA,yHAAA,CAAA,aAAU,AAAD,EAAE;YAC7B,WAAW;YACX,gBAAgB;QAClB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,MAAM,gBAAgB;QACpB,WAAW;QACX,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD;YAClC,oBAAoB;YACpB,gBAAgB;YAChB,MAAM,YAAY;YAClB,WAAW;QACb,EAAE,OAAO,OAAO;YACd,WAAW;YACX,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,mBAAmB;QACvB,CAAA,GAAA,yHAAA,CAAA,mBAAgB,AAAD;QACf,oBAAoB;QACpB,WAAW;QACX,gBAAgB;QAChB,gBAAgB;QAChB,WAAW;IACb;IAEA,IAAI,CAAC,kBAAkB;QACrB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAqC;;;;;;kCAGnD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,6LAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAU;kCAET,UAAU,kBAAkB;;;;;;;;;;;;;;;;;IAKvC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;;oCAAwB;oCACvB,kBAAkB,MAAM,GAAG;oCAAG;oCACzC,kBAAkB,MAAM,CAAC;;;;;;;0CAE5B,6LAAC;gCAAE,WAAU;;oCAAwB;oCACzB,WAAW,WAAW;oCAAK;;;;;;;0CAEvC,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;YAKJ,yBACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAA0B;;;;;;;;;;;;;;;;;AAKjD;GA1GwB;KAAA","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/SamuraiCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { createSamurai, getSamurai, upgradeStat } from '@/lib/contract';\nimport { Samurai } from '@/types/game';\n\ninterface SamuraiCardProps {\n  connectedAddress: string | null;\n  onMessageChange: (message: string) => void;\n}\n\nexport default function SamuraiCard({\n  connectedAddress,\n  onMessageChange,\n}: SamuraiCardProps) {\n  const [samurai, setSamurai] = useState<Samurai | null>(null);\n  const [samuraiName, setSamuraiName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (connectedAddress) {\n      loadSamurai();\n    }\n  }, [connectedAddress]);\n\n  const loadSamurai = async () => {\n    if (!connectedAddress) return;\n    try {\n      const samuraiData = await getSamurai(connectedAddress as `0x${string}`);\n      setSamurai(samuraiData as Samurai);\n    } catch (error) {\n      console.error('Failed to load Samurai:', error);\n    }\n  };\n\n  const handleCreateSamurai = async () => {\n    if (!samuraiName.trim()) {\n      onMessageChange('Please enter a Samurai name');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await createSamurai(samuraiName);\n      onMessageChange('Samurai created successfully!');\n      await loadSamurai();\n      setSamuraiName('');\n    } catch (error) {\n      onMessageChange('Failed to create Samurai');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUpgradeStat = async (stat: number) => {\n    setLoading(true);\n    try {\n      await upgradeStat(stat);\n      onMessageChange('Stat upgraded successfully!');\n      await loadSamurai();\n    } catch (error) {\n      onMessageChange('Failed to upgrade stat');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">🗡️ Your Samurai</h2>\n\n      {!samurai?.exists ? (\n        <div className=\"space-y-4\">\n          <p className=\"text-white/80\">\n            Create your Samurai to begin your journey\n          </p>\n          <input\n            type=\"text\"\n            value={samuraiName}\n            onChange={(e) => setSamuraiName(e.target.value)}\n            placeholder=\"Enter Samurai name\"\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-white/60 border border-white/20\"\n          />\n          <button\n            onClick={handleCreateSamurai}\n            disabled={loading || !samuraiName.trim()}\n            className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Creating...' : 'Create Samurai'}\n          </button>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          <div className=\"bg-white/5 rounded-lg p-4\">\n            <h3 className=\"text-xl font-bold text-white mb-2\">\n              {samurai.name}\n            </h3>\n            <div className=\"grid grid-cols-2 gap-2 text-sm text-white/80\">\n              <p>Level: {samurai.level.toString()}</p>\n              <p>Experience: {samurai.experience.toString()}</p>\n              <p>Skill Points: {samurai.skillPoints.toString()}</p>\n              <p>Battles Won: {samurai.battlesWon.toString()}</p>\n              <p>Battles Lost: {samurai.battlesLost.toString()}</p>\n            </div>\n          </div>\n\n          <div className=\"bg-white/5 rounded-lg p-4\">\n            <h4 className=\"text-lg font-bold text-white mb-2\">Stats</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Strength: {samurai.strength.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(0)}\n                  disabled={loading || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +2\n                </button>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Defense: {samurai.defense.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(1)}\n                  disabled={loading || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +1\n                </button>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Speed: {samurai.speed.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(2)}\n                  disabled={loading || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +1\n                </button>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-white/80\">\n                  Health: {samurai.health.toString()}\n                </span>\n                <button\n                  onClick={() => handleUpgradeStat(3)}\n                  disabled={loading || samurai.skillPoints === 0n}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm disabled:opacity-50\"\n                >\n                  +10\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/BattleArena.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  startBattle,\n  executeTurn,\n  getBattle,\n  getBattleIdCounter,\n} from '@/lib/contract';\nimport { Battle } from '@/types/game';\n\ninterface BattleArenaProps {\n  connectedAddress: string | null;\n  onMessageChange: (message: string) => void;\n}\n\nexport default function BattleArena({\n  connectedAddress,\n  onMessageChange,\n}: BattleArenaProps) {\n  const [opponentAddress, setOpponentAddress] = useState('');\n  const [betAmount, setBetAmount] = useState('0.01');\n  const [currentBattle, setCurrentBattle] = useState<Battle | null>(null);\n  const [battleId, setBattleId] = useState<bigint | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (connectedAddress) {\n      loadActiveBattle();\n    }\n  }, [connectedAddress]);\n\n  const loadActiveBattle = async () => {\n    if (!connectedAddress) return;\n    try {\n      const counter = await getBattleIdCounter();\n      if (counter && typeof counter === 'bigint' && counter > 0n) {\n        // Check the most recent battle\n        const recentBattleId = counter - 1n;\n        const battleData = await getBattle(recentBattleId);\n        const battle = battleData as Battle;\n\n        if (\n          battle.isActive &&\n          (battle.player1.toLowerCase() === connectedAddress.toLowerCase() ||\n            battle.player2.toLowerCase() === connectedAddress.toLowerCase())\n        ) {\n          setCurrentBattle(battle);\n          setBattleId(recentBattleId);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load active battle:', error);\n    }\n  };\n\n  const handleStartBattle = async () => {\n    if (!opponentAddress.trim()) {\n      onMessageChange('Please enter opponent address');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await startBattle(opponentAddress as `0x${string}`, betAmount);\n      onMessageChange('Battle started!');\n      setOpponentAddress('');\n      setBetAmount('0.01');\n      // Reload to get the new battle\n      setTimeout(() => loadActiveBattle(), 2000);\n    } catch (error) {\n      onMessageChange('Failed to start battle');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExecuteTurn = async () => {\n    if (battleId === null) {\n      onMessageChange('No active battle');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await executeTurn(battleId);\n      onMessageChange('Turn executed!');\n      // Reload battle data\n      setTimeout(async () => {\n        const battleData = await getBattle(battleId);\n        setCurrentBattle(battleData as Battle);\n      }, 2000);\n    } catch (error) {\n      onMessageChange('Failed to execute turn');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6\">\n      <h2 className=\"text-2xl font-bold text-white mb-4\">⚔️ Battle Arena</h2>\n\n      <div className=\"space-y-4\">\n        <div className=\"bg-white/5 rounded-lg p-4\">\n          <h4 className=\"text-lg font-bold text-white mb-2\">\n            Start New Battle\n          </h4>\n          <input\n            type=\"text\"\n            value={opponentAddress}\n            onChange={(e) => setOpponentAddress(e.target.value)}\n            placeholder=\"Opponent address (0x...)\"\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-white/60 border border-white/20 mb-3\"\n          />\n          <input\n            type=\"number\"\n            value={betAmount}\n            onChange={(e) => setBetAmount(e.target.value)}\n            placeholder=\"Bet amount (RON)\"\n            step=\"0.01\"\n            min=\"0.01\"\n            max=\"1\"\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-white/60 border border-white/20 mb-3\"\n          />\n          <button\n            onClick={handleStartBattle}\n            disabled={loading || !opponentAddress.trim()}\n            className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Starting Battle...' : 'Start Battle'}\n          </button>\n        </div>\n\n        {currentBattle && (\n          <div className=\"bg-white/5 rounded-lg p-4\">\n            <h4 className=\"text-lg font-bold text-white mb-2\">Active Battle</h4>\n            <div className=\"space-y-2 text-sm text-white/80\">\n              <p>Player 1 Health: {currentBattle.player1Health.toString()}</p>\n              <p>Player 2 Health: {currentBattle.player2Health.toString()}</p>\n              <p>\n                Current Turn:{' '}\n                {currentBattle.currentTurn === connectedAddress\n                  ? 'Your turn'\n                  : \"Opponent's turn\"}\n              </p>\n              <p>Turn Count: {currentBattle.turnCount.toString()}</p>\n            </div>\n            {currentBattle.currentTurn === connectedAddress && (\n              <button\n                onClick={handleExecuteTurn}\n                disabled={loading}\n                className=\"w-full mt-3 bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg transition-colors disabled:opacity-50\"\n              >\n                {loading ? 'Executing...' : 'Execute Turn'}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/components/MessageDisplay.tsx"],"sourcesContent":["interface MessageDisplayProps {\n  message: string;\n}\n\nexport default function MessageDisplay({ message }: MessageDisplayProps) {\n  if (!message) return null;\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-4 mb-6\">\n      <p className=\"text-white text-center\">{message}</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAIe,SAAS,eAAe,EAAE,OAAO,EAAuB;IACrE,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAE,WAAU;sBAA0B;;;;;;;;;;;AAG7C;KARwB","debugId":null}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["file:///home/saul/projects/ronin-rivals/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { setContractAddress } from '@/lib/contract';\nimport WalletConnect from '@/components/WalletConnect';\nimport SamuraiCard from '@/components/SamuraiCard';\nimport BattleArena from '@/components/BattleArena';\nimport MessageDisplay from '@/components/MessageDisplay';\n\nexport default function Home() {\n  const [connectedAddress, setConnectedAddress] = useState<string | null>(null);\n  const [message, setMessage] = useState('');\n\n  // Set contract address (you'll need to update this after deployment)\n  useEffect(() => {\n    // Replace with your deployed contract address\n    setContractAddress(\n      '0x0000000000000000000000000000000000000000' as `0x${string}`\n    );\n  }, []);\n\n  const handleAddressChange = (address: string | null) => {\n    setConnectedAddress(address);\n  };\n\n  const handleBalanceChange = () => {\n    // Balance is handled within the WalletConnect component\n  };\n\n  const handleMessageChange = (newMessage: string) => {\n    setMessage(newMessage);\n  };\n\n  if (!connectedAddress) {\n    return (\n      <WalletConnect\n        onAddressChange={handleAddressChange}\n        onBalanceChange={handleBalanceChange}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-red-900 via-red-800 to-red-900 p-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <WalletConnect\n          onAddressChange={handleAddressChange}\n          onBalanceChange={handleBalanceChange}\n        />\n\n        <MessageDisplay message={message} />\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <SamuraiCard\n            connectedAddress={connectedAddress}\n            onMessageChange={handleMessageChange}\n          />\n          <BattleArena\n            connectedAddress={connectedAddress}\n            onMessageChange={handleMessageChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qEAAqE;IACrE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,8CAA8C;YAC9C,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EACf;QAEJ;yBAAG,EAAE;IAEL,MAAM,sBAAsB,CAAC;QAC3B,oBAAoB;IACtB;IAEA,MAAM,sBAAsB;IAC1B,wDAAwD;IAC1D;IAEA,MAAM,sBAAsB,CAAC;QAC3B,WAAW;IACb;IAEA,IAAI,CAAC,kBAAkB;QACrB,qBACE,6LAAC,sIAAA,CAAA,UAAa;YACZ,iBAAiB;YACjB,iBAAiB;;;;;;IAGvB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,sIAAA,CAAA,UAAa;oBACZ,iBAAiB;oBACjB,iBAAiB;;;;;;8BAGnB,6LAAC,uIAAA,CAAA,UAAc;oBAAC,SAAS;;;;;;8BAEzB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,oIAAA,CAAA,UAAW;4BACV,kBAAkB;4BAClB,iBAAiB;;;;;;sCAEnB,6LAAC,oIAAA,CAAA,UAAW;4BACV,kBAAkB;4BAClB,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;AAM7B;GAxDwB;KAAA","debugId":null}}]
}